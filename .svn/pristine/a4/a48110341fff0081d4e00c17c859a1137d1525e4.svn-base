package oe.roma.appeals.controller;

import oe.roma.appeals.domain.Signature;
import oe.roma.appeals.domain.TypeAppeal;
import oe.roma.appeals.service.AppealsService;
import oe.roma.appeals.service.IUserService;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import javax.annotation.Resource;

/**
 * Handles CRUD requests for users
 */
@Controller
@RequestMapping("/dictionary")
public class DictionaryController {

    protected static Logger logger = Logger.getLogger("controller");

    @Resource(name = "appealsService")
    private AppealsService appealsService;
    @Resource(name = "userService")
    private IUserService userService;


    @RequestMapping(method = RequestMethod.GET)
    public String addTypeAppeal(ModelMap model) {


        model.addAttribute("typeAppeal", new TypeAppeal());
        model.addAttribute("signature", new Signature());
        model.addAttribute("active", "dictionary");

        if(model.get("activeItem")==null) model.addAttribute("activeItem", "add-new-appeals");

        return "dictionary";

    }


    @RequestMapping(value = "/addTypeAppeal", method = RequestMethod.POST)
    public String addTypeAppeal(@ModelAttribute TypeAppeal typeAppeal,RedirectAttributes redirectAttributes) {
        appealsService.addTypeAppeal(typeAppeal);
        redirectAttributes.addFlashAttribute("activeItem", "add-new-appeals");
        return "redirect:/dictionary";
    }

    @RequestMapping(value = "/addSignature", method = RequestMethod.POST)
    public String addSignature(@ModelAttribute Signature signature,RedirectAttributes redirectAttributes) {
        appealsService.addSignature(signature);
        redirectAttributes.addFlashAttribute("activeItem", "add-new-director");
        return "redirect:/dictionary";
    }
}
